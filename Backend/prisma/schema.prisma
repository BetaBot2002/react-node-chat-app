// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Chats {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  chatName    String
  isGroupChat Boolean

  userIds String[] @db.ObjectId
  users   Users[]  @relation(name: "Users", fields: [userIds], references: [id])

  adminIds String[] @db.ObjectId
  admins   Users[]  @relation(name: "Admins", fields: [adminIds], references: [id])

  lastMessage   Messages? @relation(fields: [lastMessageId], references: [id])
  lastMessageId String?   @unique @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Users {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  isAdmin  Boolean

  chats   Chats[]  @relation(name: "Users", fields: [chatIds], references: [id])
  chatIds String[] @db.ObjectId

  adminChats   Chats[]  @relation(name: "Admins", fields: [adminChatIds], references: [id])
  adminChatIds String[] @db.ObjectId

  messages Messages[]

  readIds String[]   @db.ObjectId
  read    Messages[] @relation(name: "Read", fields: [readIds], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Messages {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content String

  senderId String? @db.ObjectId
  sender   Users?  @relation(fields: [senderId], references: [id])

  readersIds String[] @db.ObjectId
  readers    Users[]  @relation(name: "Read", fields: [readersIds], references: [id])

  chat Chats?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlackListedTokens {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique
}
